//ЗАДАЧИ: Повышенный уровень

/*
Задача 1: Побочные действия внутри условия
Что выведет в консоль следующий код и почему?
*/
let a = 5; // объявление и присвоение
if ((a = 0)) {
  // a возвратит 0, а 0 это false
  console.log("Истина"); // т.к. в условии false, этот блок выполняться не будет!
} else {
  console.log("Ложь"); // а это ветвление выполнится
}
console.log(`Правильный ответ Ложь`);

/*
Задача 2: Функция с побочным действием и вложенным вызовом
Что будет выведено в консоль, и почему?
*/
function multiplyAndLog(x, y) {
  // принимает x y как аргументы функции
  console.log(`Умножаю ${x} и ${y}`); // побочное действие, вывод в консоль внутри фукнции
  return x * y; // основное выражение, что возвратит фукнция
}

let result = multiplyAndLog(2, multiplyAndLog(3, 4)); // Сначала выполинтся вызов функции multiplyAndLog(3, 4) вернет 12 далее выполнится вызов функции multiplyAndLog(2, 12) вернет 24
console.log("Результат: ", result);
/*
Задача 3: Инкременты в одном выражении
Что будет в n и m?
*/
let n = 5; // n = 5
let m = n++ + ++n; // в моменте n++ возвратит 5, но значение n = 6 => ++n уже работает с 6 и прибавляет к ней 1 будет 7 ИТОГ: n = 7 m = 5+7=12
console.log("n:", n, "m:", m);

/*
Задача 4: Логические выражения с функцией
Что произойдёт? Будет ли вызвана check()? Что в res?
Ответ: В данном блоке кода функция check() выводит запись и возвращает булево значение, но так как в переменной res есть логическая операци И вызов функции check(15) не будет выполняться, т.к. false && любое выражение будет возращать false
*/
function check(value) {
  console.log("Вызвана check()");
  return value > 10;
}

let res = false && check(15);
console.log(`Будет выводиться false: ${res}`);

/*
Задача 5: Выражение с присваиванием внутри выражения
Что вернётся и как изменятся переменные?
*/
let x = 2;
let y = 3;
let z = (x += y) * 2; // z = 10 x +=y вернет 5
console.log("x:", x, "z:", z); // x = 5 z = 10

/*
Задача 6: Логика и порядок вычислений
Чему равно result и почему?
*/
a = true;
let b = false;
let c = true;
result = (a && b) || c;
console.log(
  `Приоритет операций, сначала оператор И потом ИЛИ результат = true ${result}`
);

/*
Задача 7: Комбинированное выражение с функцией и побочным действием
Что будет в counter и value?
*/

let counter = 0;

function inc() {
  counter++;
  return counter;
}

let value = inc() + inc(); // 3
console.log("counter:", counter, "value", value); // counter = 2 value = 3
